{"version":3,"sources":["../src/cli.ts","../src/i18n/index.js","../src/i18n/handler.js","../src/i18n/baidu.js","../src/i18n/config.js"],"sourcesContent":["import cac from \"cac\";\nimport handler from \"./i18n\";\n\nconst cli = cac();\n// 提取需要翻译的文本， 并修改代码\ncli\n  .command(\"i18n\", \"提取当前项目下多语言的文本， 进行处理并翻译\")\n  // .option(\"-d, --delete\", \"清除翻译缓存\")\n  // .option(\"translate <from> <to>\", \"针对已解析出的缓存文件翻译出另外的语言\")\n  .option(\"back\", \"回退代码\")\n  .action(async ({ back }) => {\n    global.i18n.back = back;\n    handler();\n  });\n\ncli.help();\ncli.parse();\n// 已经npm link了， 可以全局实用 uni-tool\n","import { resolve } from \"path\";\nimport { readFileSync, writeFileSync, existsSync, mkdirSync } from \"fs\";\nimport handler from \"./handler\";\nimport { translate } from \"./baidu\";\nimport * as defaultConfig from \"./config\";\n\nglobal.i18n = {}\nglobal.i18n.config = defaultConfig;\n\n// 提取需要翻译的文本， 并修改代码\nexport default async function () {\n  const root = process.cwd();\n  global.i18n.cacheDir = resolve(root, \".i18n\");\n  // 读取项目本地配置\n  if (existsSync(resolve(global.i18n.cacheDir, 'config.js'))) {\n    const config = require(resolve(global.i18n.cacheDir, 'config.js'))\n    global.i18n.config = config\n  }\n  if (!existsSync(global.i18n.cacheDir)) mkdirSync(global.i18n.cacheDir);\n\n  // 获取所有文本\n  const allText = handler(root);\n  // 不进行翻译\n  if (global.i18n.back) return\n\n  // 缓存原文本\n  // 格式： {uniKey: text}\n  writeFileSync(\n    resolve(global.i18n.cacheDir, `${global.i18n.config.from}.json`),\n    JSON.stringify(allText, null, 2)\n  );\n\n  // 读取缓存数据\n  let cacheTmpData = {}\n  let cache = {}\n  if (existsSync(resolve(global.i18n.cacheDir, 'cache.json'))) {\n    cache = require(resolve(global.i18n.cacheDir, 'cache.json'))\n  }\n  cacheTmpData[global.i18n.config.from] = allText\n\n  // 生成翻译数据\n  for (let toTranslate of global.i18n.config.to) {\n    let finalTranslateText = []\n    // 获取缓存的翻译文件， 对比翻译\n    let filterText = JSON.parse(JSON.stringify(allText))\n\n    if (cache) {\n      const cacheKeys = Object.keys(cache)\n      filterText = Object.keys(filterText).reduce((pre, cur) => {\n        if (!cacheKeys.includes(filterText[cur]) || !cache[filterText[cur]][toTranslate]) {\n          return { ...pre, [cur]: filterText[cur] }\n        }\n        finalTranslateText[cur] = cache[filterText[cur]][toTranslate];\n        return pre\n      }, {})\n    }\n    // 翻译\n    console.log(filterText, '翻译数据', toTranslate)\n    const translateText = await translate(\n      filterText,\n      global.i18n.config.from,\n      toTranslate\n    );\n    // 合并缓存数据 + 翻译数据\n    finalTranslateText = { ...finalTranslateText, ...translateText }\n    // 排序对象\n    finalTranslateText = Object.keys(finalTranslateText).sort(\n      (pre, cur) =>\n        Number(pre.replace(global.i18n.config.prefix, '')) - Number(cur.replace(global.i18n.config.prefix, ''))\n    ).reduce((pre, cur) => {\n      return { ...pre, [cur]: finalTranslateText[cur] }\n    }, {})\n    // 格式： {uniKey: text}\n    writeFileSync(\n      resolve(global.i18n.cacheDir, `${toTranslate}.json`),\n      JSON.stringify(finalTranslateText, null, 2)\n    );\n    // 保持临时缓存\n    cacheTmpData[toTranslate] = translateText\n  }\n\n  const langs = Object.keys(cacheTmpData)\n  const cacheRes = (Object.keys(cacheTmpData[global.i18n.config.from]).reduce((a, b) => {\n    let key = cacheTmpData[global.i18n.config.from][b]\n    let item = langs.reduce((pre, cur) => {\n      if (cacheTmpData[cur][b])\n        return { ...pre, [cur]: cacheTmpData[cur][b] }\n      return pre\n    }, {})\n    if (a[key]) {\n      a[key] = { ...a[key], ...item }\n    } else {\n      a[key] = item\n    }\n    return a;\n  }, cache))\n  // 生成缓存数据\n  writeFileSync(\n    resolve(global.i18n.cacheDir, 'cache.json'),\n    JSON.stringify(cacheRes, null, 2)\n  );\n}\n","import { resolve, extname } from \"path\"\nimport { readdirSync, statSync, readFileSync, writeFileSync } from \"fs\"\nimport MagicString from \"magic-string\"\n\n// 唯一id\nlet i18nIndex = 0;\nfunction nextKey() {\n  ++i18nIndex;\n  return `${global.i18n.config.prefix}${i18nIndex}`;\n}\nlet allText = {};\n\nconst deepRead = (root) => {\n  let dirs = readdirSync(root)\n  // 过滤不处理文件夹\n  dirs = dirs.filter(dir => !global.i18n.config.ignoreDirs.includes(dir))\n  dirs.forEach(dirPath => {\n    const fullPath = resolve(root, dirPath)\n    const fileStat = statSync(fullPath)\n    if (fileStat.isDirectory()) {\n      deepRead(resolve(root, dirPath))\n    } else {\n      const file = readFileSync(fullPath, 'utf-8')\n\n      // 过滤不处理文件\n      if (global.i18n.config.ignoreExts.includes(extname(fullPath || ''))) return\n\n      const fileString = new MagicString(file);\n      fileString.replace(global.i18n.config.reg, (...args) => {\n        const key = nextKey()\n        allText = global.i18n.config.handlerResult(allText, key, args)\n\n        // 回退\n        if (global.i18n.back) {\n          return global.i18n.config.backHandler(allText, key, args)\n        }\n        return global.i18n.config.handlerTemlpate(allText, key, args)\n      })\n      writeFileSync(fullPath, fileString.toString());\n\n      // // 重写文件 sourceMap\n      // if (fileString.hasChanged()) {\n      //   const fileMap = fileString.generateMap({\n      //     source: fullPath,\n      //     file: `${fullPath}.map`,\n      //     includeContent: true\n      //   });\n      //   writeFileSync(`${fullPath}.map`, fileMap.toString());\n      // }\n    }\n  })\n}\n\n\nexport default function (root) {\n  deepRead(root)\n  return allText;\n}\n","import md5 from \"md5\"\nimport axios from \"axios\"\nimport ora from \"ora\"\n\nconst omit = {\n  interval: 200,\n  frames: [\n    '.',\n    ' .',\n    '  .',\n    '   .',\n    '    .',\n    '.   .',\n    ' .  .',\n    '  . .',\n    '   ..',\n    '.  ..',\n    ' . ..',\n    '  ...',\n    '. ...',\n    ' ....',\n    '.....',\n    '!....',\n    '.!...',\n    '..!..',\n    '...!.',\n    '....!',\n    '!...!',\n    '.!..!',\n    '..!.!',\n    '...!!',\n    '!..!!',\n    '.!.!!',\n    '..!!!',\n    '!.!!!',\n    '.!!!!',\n    '!!!!!',\n    '.!!!!',\n    '!.!!!',\n    '!!.!!',\n    '!!!.!',\n    '!!!!.',\n    '.!!!.',\n    '!.!!.',\n    '!!.!.',\n    '!!!..',\n    '.!!..',\n    '!.!..',\n    '!!...',\n    '.!...',\n    '!....',\n    '.....',\n    '. ...',\n    '.. ..',\n    '... .',\n    '.... ',\n    ' ... ',\n    '. .. ',\n    '.. . ',\n    '...  ',\n    ' ..  ',\n    '. .  ',\n    '..   ',\n    ' .   ',\n  ]\n}\n// const spinner = ora({ spinner: omit }).start()\n\n\n\nconst timeout = (time = 2000) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve()\n    }, time)\n  })\n}\n\nconst queryHandler = (allText) => {\n  // 标准版单次最长请求由6000字节改为1000字符\n  allText = allText.reduce((a, b) => {\n    if (a.length > 0) {\n      let lastArr = a.pop();\n      if (lastArr.length < 20)\n        return [...a, [...lastArr, b]]\n      return [...a, lastArr, [b]]\n    }\n\n    return [...a, [b]]\n  }, [])\n  // 多个query可以用\\n连接  如 query='apple\\norange\\nbanana\\npear'\n  return allText\n}\n\n// https://api.fanyi.baidu.com/api/trans/product/desktop\nexport const translate = async (allText, from, to) => {\n  try {\n    const allTextValues = Object.values(allText)\n    const allTextKeys = Object.keys(allText)\n    const chankValues = queryHandler(allTextValues);\n    const chankKeys = queryHandler(allTextKeys);\n    const querys = chankValues.map(v => v.join('\\n'))\n\n\n    let res = [];\n    for (let i = 0; i < querys.length; i++) {\n      // const query = querys[i]\n      // const salt = (new Date).getTime();\n      // const str1 = global.i18n.config.appid + query + salt + global.i18n.config.key;\n      // const sign = md5(str1);\n      // const response = await axios.get('http://api.fanyi.baidu.com/api/trans/vip/translate', {\n      //   params: {\n      //     q: query,\n      //     appid: global.i18n.config.appid,\n      //     salt: salt,\n      //     from: from,\n      //     to: to,\n      //     sign: sign\n      //   }\n      // })\n\n      // const result = response.data\n      // if (result && result.error_code) {\n      //   console.log('翻译失败：', result);\n      //   throw new Error(result.error_code)\n      // }\n\n      // res = [...res, ...result.trans_result.map((item, j) => {\n      //   if (!chankKeys[i] || !chankKeys[i][j]) {\n      //     throw new Error(JSON.stringify(item))\n      //   }\n      //   return { key: chankKeys[i][j], item }\n      // })]\n      await timeout()\n    }\n\n    return res.reduce((a, b) => ({ ...a, [b.key]: b.item.dst }), {})\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n","const fs = require('fs')\nconst path = require('path')\n\nexport const appid = ''\nexport const key = ''\n// 语种 https://api.fanyi.baidu.com/doc/21\n// export const from = 'zh'\nexport const from = 'cht'\nexport const to = ['en', 'zh']\nexport const ignoreDirs = [\n  '.hbuilderx', 'node_modules', 'uni_modules', 'unpackage', '.git', 'dist', 'static'\n]\nexport const ignoreExts = [\".woff2\", '.jpg', '.png', '.pdf', '.keystore']\nexport const reg = new RegExp(/\\$t\\(('|\"|`)(.*?)('|\"|`)\\)/g)\nexport const prefix = 'i18n_';\nexport const handlerResult = (allText, nextKey, [_, $1, $2, $3]) => {\n  allText[nextKey] = $2;\n  return allText\n}\nexport const handlerTemlpate = (allText, nextKey, [_, $1, $2, $3]) => {\n  return `$t(${$1}${nextKey}${$3})`\n}\n\nlet json\nexport const getCacheFromJson = () => {\n  if (json) return json;\n  const jsonFile = fs.readFileSync(path.resolve(global.i18n.cacheDir, `./${global.i18n.cacheDir}.json`), 'utf-8')\n  json = JSON.parse(jsonFile)\n  return json;\n}\n\nexport const backHandler = (allText, nextKey, [_, $1, $2, $3]) => {\n  const json = getCacheFromJson();\n  return `$t(${$1}${json[nextKey] ? json[nextKey] : ''}${$3})`\n}\n"],"mappings":"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","names":["import_path","import_fs","MagicString","key","resolve","allText","from","to","allText","nextKey","json","allText","key","cac"]}