{"version":3,"sources":["../src/cli.ts","../src/i18n/index.js","../src/i18n/handler.js","../src/i18n/baidu.js","../src/i18n/config.js"],"sourcesContent":["import cac from \"cac\";\nimport handler from \"./i18n\";\n\nconst cli = cac();\n// 提取需要翻译的文本， 并修改代码\ncli\n  .command(\"i18n\", \"提取当前项目下多语言的文本， 进行处理并翻译\")\n  // .option(\"-d, --delete\", \"清除翻译缓存\")\n  // .option(\"translate <from> <to>\", \"针对已解析出的缓存文件翻译出另外的语言\")\n  // .option(\"back\", \"回退代码\")\n  .action(async () => {\n    handler();\n  });\n\ncli.help();\ncli.parse();\n// 已经npm link了， 可以全局实用 uni-tool\n","import { resolve } from \"path\";\nimport { readFileSync, writeFileSync, existsSync, mkdirSync } from \"fs\";\nimport handler from \"./handler\";\nimport { translate } from \"./baidu\";\nimport * as defaultConfig from \"./config\";\n\nglobal.i18n = {}\nglobal.i18n.config = defaultConfig;\n\n// 提取需要翻译的文本， 并修改代码\nexport default async function () {\n  const root = process.cwd();\n  global.i18n.cacheDir = resolve(root, \".i18n\");\n  // 读取项目本地配置\n  if (existsSync(resolve(global.i18n.cacheDir, 'config.js'))) {\n    const config = require(resolve(global.i18n.cacheDir, 'config.js'))\n    global.i18n.config = config\n  }\n\n  if (!existsSync(global.i18n.cacheDir)) mkdirSync(global.i18n.cacheDir);\n\n  // 获取所有文本\n  const allText = handler(root);\n  // console.log(allText, 'allText');\n\n  // 不进行翻译\n  if (!global.i18n.config.translate) return\n\n  // 获取缓存的翻译文件， 对比翻译\n  // TODO\n\n  // 缓存， 生成\n  // 格式： {uniKey: text}\n  writeFileSync(\n    resolve(global.i18n.cacheDir, `${global.i18n.config.from}.json`),\n    JSON.stringify(allText, null, 2)\n  );\n\n  // 生成翻译数据\n  global.i18n.config.to.forEach(async toTranslate => {\n    const translateText = await translate(\n      allText,\n      global.i18n.config.from,\n      toTranslate\n    );\n\n    // 格式： {uniKey: text}\n    writeFileSync(\n      resolve(global.i18n.cacheDir, `${toTranslate}.json`),\n      JSON.stringify(translateText, null, 2)\n    );\n  })\n\n}\n","import { resolve, extname } from \"path\"\nimport { readdirSync, statSync, readFileSync, writeFileSync } from \"fs\"\nimport MagicString from \"magic-string\"\n\n// 唯一id\nlet i18nIndex = 0;\nfunction nextKey() {\n  ++i18nIndex;\n  return `${global.i18n.config.prefix}${i18nIndex}`;\n}\nlet allText = {};\n\nconst deepRead = (root) => {\n  let dirs = readdirSync(root)\n  // 过滤不处理文件夹\n  dirs = dirs.filter(dir => !global.i18n.config.ignoreDirs.includes(dir))\n  dirs.forEach(dirPath => {\n    const fullPath = resolve(root, dirPath)\n    const fileStat = statSync(fullPath)\n    if (fileStat.isDirectory()) {\n      deepRead(resolve(root, dirPath))\n    } else {\n      const file = readFileSync(fullPath, 'utf-8')\n\n      // 过滤不处理文件\n      if (global.i18n.config.ignoreExts.includes(extname(fullPath || ''))) return\n\n      const fileString = new MagicString(file);\n      fileString.replace(global.i18n.config.reg, (...args) => {\n        const key = nextKey()\n        allText = global.i18n.config.handlerResult(allText, key, args)\n        return global.i18n.config.handlerTemlpate(allText, key, args)\n      })\n      writeFileSync(fullPath, fileString.toString());\n\n      // // 重写文件 sourceMap\n      // if (fileString.hasChanged()) {\n      //   const fileMap = fileString.generateMap({\n      //     source: fullPath,\n      //     file: `${fullPath}.map`,\n      //     includeContent: true\n      //   });\n      //   writeFileSync(`${fullPath}.map`, fileMap.toString());\n      // }\n    }\n  })\n}\n\n\nexport default function (root) {\n  deepRead(root)\n  return allText;\n}\n","import md5 from \"md5\"\nimport axios from \"axios\"\n\nconst queryHandler = (allText) => {\n  // 标准版单次最长请求由6000字节改为1000字符\n  allText = allText.reduce((a, b) => {\n    if (a.length > 0) {\n      let lastArr = a.pop();\n      if (lastArr.length < 20)\n        return [...a, [...lastArr, b]]\n      return [...a, lastArr, [b]]\n    }\n\n    return [...a, [b]]\n  }, [])\n  // 多个query可以用\\n连接  如 query='apple\\norange\\nbanana\\npear'\n  return allText.map(v => v.join('\\n'))\n}\n\n// https://api.fanyi.baidu.com/api/trans/product/desktop\nexport const translate = async (allText, from, to) => {\n  try {\n    const allTextValues = Object.values(allText)\n    const allTextKeys = Object.keys(allText)\n    querys = queryHandler(allTextValues);\n    let res = [];\n    for (let i = 0; i < querys.length; i++) {\n      const query = querys[i]\n      const salt = (new Date).getTime();\n      const str1 = global.i18n.config.appid + query + salt + global.i18n.config.key;\n      const sign = md5(str1);\n      const response = await axios.get('http://api.fanyi.baidu.com/api/trans/vip/translate', {\n        params: {\n          q: query,\n          appid: global.i18n.config.appid,\n          salt: salt,\n          from: from,\n          to: to,\n          sign: sign\n        }\n      })\n      const result = response.data\n      if (result && result.error_code)\n        throw new Error(result.error_code)\n\n      res = [...res, ...result.trans_result]\n    }\n    return allTextKeys.map(key => {\n      let find = res.find(v => v.src === allText[key])\n      if (!find) find = { src: '', dst: '' }\n      return [key, find.dst]\n    }).reduce((a, b) => { return { ...a, [b[0]]: b[1] } }, {})\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n","export const appid = ''\nexport const key = ''\n// 语种 https://api.fanyi.baidu.com/doc/21\n// export const from = 'zh'\nexport const from = 'cht'\nexport const to = ['en', 'zh']\nexport const ignoreDirs = [\n  '.hbuilderx', 'node_modules', 'uni_modules', 'unpackage', '.git', 'dist', 'static'\n]\nexport const ignoreExts = [\".woff2\", '.jpg', '.png', '.pdf', '.keystore']\nexport const reg = new RegExp(/\\$t\\(('|\"|`)(.*?)('|\"|`)\\)/g)\nexport const prefix = 'i18n_';\nexport const handlerResult = (allText, nextKey, [_, $1, $2, $3]) => {\n  allText[nextKey] = $2;\n  return allText\n}\nexport const handlerTemlpate = (allText, nextKey, [_, $1, $2, $3]) => {\n  // return `$t(${$1}${nextKey}${$3}, ${$1}${$2}${$3})`\n  return `$t(${$1}${nextKey}${$3})`\n}\n\n\n// // import en from './en.json'\n// // import zhHans from './zh-Hans.json'\n// // import zhHant from './zh-Hant.json'\n\n// import en from '../.i18n/en.json'\n// import zhHans from '../.i18n/zh.json'\n// import zhHant from '../.i18n/cht.json'\n// export default {\n// \ten,\n// \t'zh-Hans': zhHans,\n// \t'zh-Hant': zhHant\n// }\n"],"mappings":"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","names":["import_path","import_fs","MagicString","key","allText","from","to","md5","axios","key","allText","nextKey","allText","cac"]}