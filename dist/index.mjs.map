{"version":3,"sources":["../src/cli.ts","../src/i18n/index.js","../src/i18n/handler.js","../src/i18n/baidu.js","../src/i18n/config.js"],"sourcesContent":["import cac from \"cac\";\nimport handler from \"./i18n\";\n\nconst cli = cac();\n// 提取需要翻译的文本， 并修改代码\ncli\n  .command(\"i18n\", \"提取当前项目下多语言的文本， 进行处理并翻译\")\n  // .option(\"-d, --delete\", \"清除翻译缓存\")\n  // .option(\"translate <from> <to>\", \"针对已解析出的缓存文件翻译出另外的语言\")\n  .option(\"back\", \"回退代码\")\n  .action(async ({ back }) => {\n    global.i18n.back = back;\n    handler();\n  });\n\ncli.help();\ncli.parse();\n// 已经npm link了， 可以全局实用 uni-tool\n","import { resolve } from \"path\";\nimport { readFileSync, writeFileSync, existsSync, mkdirSync } from \"fs\";\nimport handler from \"./handler\";\nimport { translate } from \"./baidu\";\nimport * as defaultConfig from \"./config\";\n\nglobal.i18n = {}\nglobal.i18n.config = defaultConfig;\n\n// 提取需要翻译的文本， 并修改代码\nexport default async function () {\n  const root = process.cwd();\n  global.i18n.cacheDir = resolve(root, \".i18n\");\n  // 读取项目本地配置\n  if (existsSync(resolve(global.i18n.cacheDir, 'config.js'))) {\n    const config = require(resolve(global.i18n.cacheDir, 'config.js'))\n    global.i18n.config = config\n  }\n  if (!existsSync(global.i18n.cacheDir)) mkdirSync(global.i18n.cacheDir);\n\n  // 获取所有文本\n  const allText = handler(root);\n  // 不进行翻译\n  if (global.i18n.back) return\n\n  // 缓存原文本\n  // 格式： {uniKey: text}\n  writeFileSync(\n    resolve(global.i18n.cacheDir, `${global.i18n.config.from}.json`),\n    JSON.stringify(allText, null, 2)\n  );\n\n  // 读取缓存数据\n  let cacheTmpData = {}\n  let cache = {}\n  if (existsSync(resolve(global.i18n.cacheDir, 'cache.json'))) {\n    cache = require(resolve(global.i18n.cacheDir, 'cache.json'))\n  }\n  cacheTmpData[global.i18n.config.from] = allText\n\n  // 生成翻译数据\n  for (let toTranslate of global.i18n.config.to) {\n    let finalTranslateText = []\n    // 获取缓存的翻译文件， 对比翻译\n    let filterText = JSON.parse(JSON.stringify(allText))\n\n    if (cache) {\n      const cacheKeys = Object.keys(cache)\n      filterText = Object.keys(filterText).reduce((pre, cur) => {\n        if (!cacheKeys.includes(filterText[cur]) || !cache[filterText[cur]][toTranslate]) {\n          return { ...pre, [cur]: filterText[cur] }\n        }\n        finalTranslateText[cur] = cache[filterText[cur]][toTranslate];\n        return pre\n      }, {})\n    }\n    // 翻译\n    console.log(filterText, '翻译数据', toTranslate)\n    const translateText = await translate(\n      filterText,\n      global.i18n.config.from,\n      toTranslate\n    );\n    // 合并缓存数据 + 翻译数据\n    finalTranslateText = { ...finalTranslateText, ...translateText }\n    // 排序对象\n    finalTranslateText = Object.keys(finalTranslateText).sort(\n      (pre, cur) =>\n        Number(pre.replace(global.i18n.config.prefix, '')) - Number(cur.replace(global.i18n.config.prefix, ''))\n    ).reduce((pre, cur) => {\n      return { ...pre, [cur]: finalTranslateText[cur] }\n    }, {})\n    // 格式： {uniKey: text}\n    writeFileSync(\n      resolve(global.i18n.cacheDir, `${toTranslate}.json`),\n      JSON.stringify(finalTranslateText, null, 2)\n    );\n    // 保持临时缓存\n    cacheTmpData[toTranslate] = translateText\n  }\n\n  const langs = Object.keys(cacheTmpData)\n  const cacheRes = (Object.keys(cacheTmpData[global.i18n.config.from]).reduce((a, b) => {\n    let key = cacheTmpData[global.i18n.config.from][b]\n    let item = langs.reduce((pre, cur) => {\n      if (cacheTmpData[cur][b])\n        return { ...pre, [cur]: cacheTmpData[cur][b] }\n      return pre\n    }, {})\n    if (a[key]) {\n      a[key] = { ...a[key], ...item }\n    } else {\n      a[key] = item\n    }\n    return a;\n  }, cache))\n  // 生成缓存数据\n  writeFileSync(\n    resolve(global.i18n.cacheDir, 'cache.json'),\n    JSON.stringify(cacheRes, null, 2)\n  );\n}\n","import { resolve, extname } from \"path\"\nimport { readdirSync, statSync, readFileSync, writeFileSync } from \"fs\"\nimport MagicString from \"magic-string\"\n\n// 唯一id\nlet i18nIndex = 0;\nfunction nextKey() {\n  ++i18nIndex;\n  return `${global.i18n.config.prefix}${i18nIndex}`;\n}\nlet allText = {};\n\nconst deepRead = (root) => {\n  let dirs = readdirSync(root)\n  // 过滤不处理文件夹\n  dirs = dirs.filter(dir => !global.i18n.config.ignoreDirs.includes(dir))\n  dirs.forEach(dirPath => {\n    const fullPath = resolve(root, dirPath)\n    const fileStat = statSync(fullPath)\n    if (fileStat.isDirectory()) {\n      deepRead(resolve(root, dirPath))\n    } else {\n      const file = readFileSync(fullPath, 'utf-8')\n\n      // 过滤不处理文件\n      if (global.i18n.config.ignoreExts.includes(extname(fullPath || ''))) return\n\n      const fileString = new MagicString(file);\n      fileString.replace(global.i18n.config.reg, (...args) => {\n        const key = nextKey()\n        allText = global.i18n.config.handlerResult(allText, key, args)\n\n        // 回退\n        if (global.i18n.back) {\n          return global.i18n.config.backHandler(allText, key, args)\n        }\n        return global.i18n.config.handlerTemlpate(allText, key, args)\n      })\n      writeFileSync(fullPath, fileString.toString());\n\n      // // 重写文件 sourceMap\n      // if (fileString.hasChanged()) {\n      //   const fileMap = fileString.generateMap({\n      //     source: fullPath,\n      //     file: `${fullPath}.map`,\n      //     includeContent: true\n      //   });\n      //   writeFileSync(`${fullPath}.map`, fileMap.toString());\n      // }\n    }\n  })\n}\n\n\nexport default function (root) {\n  deepRead(root)\n  return allText;\n}\n","import md5 from \"md5\"\nimport axios from \"axios\"\n\nconst queryHandler = (allText) => {\n  // 标准版单次最长请求由6000字节改为1000字符\n  allText = allText.reduce((a, b) => {\n    if (a.length > 0) {\n      let lastArr = a.pop();\n      if (lastArr.length < 20)\n        return [...a, [...lastArr, b]]\n      return [...a, lastArr, [b]]\n    }\n\n    return [...a, [b]]\n  }, [])\n  // 多个query可以用\\n连接  如 query='apple\\norange\\nbanana\\npear'\n  return allText\n}\n\n// https://api.fanyi.baidu.com/api/trans/product/desktop\nexport const translate = async (allText, from, to) => {\n  try {\n    const allTextValues = Object.values(allText)\n    const allTextKeys = Object.keys(allText)\n    const chankValues = queryHandler(allTextValues);\n    const chankKeys = queryHandler(allTextKeys);\n    const querys = chankValues.map(v => v.join('\\n'))\n\n\n    let res = [];\n    for (let i = 0; i < querys.length; i++) {\n      const query = querys[i]\n      const salt = (new Date).getTime();\n      const str1 = global.i18n.config.appid + query + salt + global.i18n.config.key;\n      const sign = md5(str1);\n      const response = await axios.get('http://api.fanyi.baidu.com/api/trans/vip/translate', {\n        params: {\n          q: query,\n          appid: global.i18n.config.appid,\n          salt: salt,\n          from: from,\n          to: to,\n          sign: sign\n        }\n      })\n\n      const result = response.data\n      if (result && result.error_code) {\n        console.log('翻译失败：', result);\n        throw new Error(result.error_code)\n      }\n\n      res = [...res, ...result.trans_result.map((item, j) => {\n        if (!chankKeys[i] || !chankKeys[i][j]) {\n          throw new Error(JSON.stringify(item))\n        }\n        return { key: chankKeys[i][j], item }\n      })]\n    }\n\n    return res.reduce((a, b) => ({ ...a, [b.key]: b.item.dst }), {})\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n","const fs = require('fs')\nconst path = require('path')\n\nexport const appid = ''\nexport const key = ''\n// 语种 https://api.fanyi.baidu.com/doc/21\n// export const from = 'zh'\nexport const from = 'cht'\nexport const to = ['en', 'zh']\nexport const ignoreDirs = [\n  '.hbuilderx', 'node_modules', 'uni_modules', 'unpackage', '.git', 'dist', 'static'\n]\nexport const ignoreExts = [\".woff2\", '.jpg', '.png', '.pdf', '.keystore']\nexport const reg = new RegExp(/\\$t\\(('|\"|`)(.*?)('|\"|`)\\)/g)\nexport const prefix = 'i18n_';\nexport const handlerResult = (allText, nextKey, [_, $1, $2, $3]) => {\n  allText[nextKey] = $2;\n  return allText\n}\nexport const handlerTemlpate = (allText, nextKey, [_, $1, $2, $3]) => {\n  return `$t(${$1}${nextKey}${$3})`\n}\n\nlet json\nexport const getCacheFromJson = () => {\n  if (json) return json;\n  const jsonFile = fs.readFileSync(path.resolve(global.i18n.cacheDir, `./${global.i18n.cacheDir}.json`), 'utf-8')\n  json = JSON.parse(jsonFile)\n  return json;\n}\n\nexport const backHandler = (allText, nextKey, [_, $1, $2, $3]) => {\n  const json = getCacheFromJson();\n  return `$t(${$1}${json[nextKey] ? json[nextKey] : ''}${$3})`\n}\n"],"mappings":"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","names":["cac","resolve","writeFileSync","existsSync","mkdirSync","resolve","extname","readdirSync","statSync","readFileSync","writeFileSync","MagicString","i18nIndex","nextKey","allText","deepRead","root","dirs","dir","dirPath","fullPath","file","fileString","args","key","handler_default","md5","axios","queryHandler","allText","a","b","lastArr","translate","from","to","allTextValues","allTextKeys","chankValues","chankKeys","querys","v","res","i","query","salt","str1","sign","result","item","j","error","config_exports","__export","appid","backHandler","from","getCacheFromJson","handlerResult","handlerTemlpate","ignoreDirs","ignoreExts","key","prefix","reg","to","fs","path","allText","nextKey","_","$1","$2","$3","json","jsonFile","config_exports","i18n_default","root","resolve","existsSync","config","__require","mkdirSync","allText","handler_default","writeFileSync","cacheTmpData","cache","toTranslate","finalTranslateText","filterText","cacheKeys","pre","cur","translateText","translate","langs","cacheRes","a","b","key","item","cli","cac","back","i18n_default"]}